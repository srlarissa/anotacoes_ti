{
	"nodes":[
		{"id":"e73565d31c8c25ed","type":"text","text":"**LIST**\n\n- Derivam dos Arrays;\n- Tem comprimento dinâmico;\n- Aceitam itens duplicados.","x":-800,"y":110,"width":297,"height":180,"color":"2"},
		{"id":"d7893bf882447d7d","type":"text","text":"**BUSCA:** O(n)","x":-2000,"y":-700,"width":250,"height":50,"color":"2"},
		{"id":"1061eb39cbab5973","type":"text","text":"**ACESSO:** O(1)","x":-2000,"y":-255,"width":250,"height":50,"color":"2"},
		{"id":"c0fd84367efb46aa","type":"text","text":"**ACESSO:** O(1)","x":-2000,"y":750,"width":250,"height":60,"color":"2"},
		{"id":"d27b3dd9baa0b9a6","type":"text","text":"**ACESSO:** O(n)","x":-2000,"y":260,"width":250,"height":60,"color":"2"},
		{"id":"1430a32d7a1ca350","type":"text","text":"**LINKEDLIST**\n\nArmazena elementos em nós encadeados e guarda em seu corpo o ponteiro para o próximo elemento (e para o anterior se for duplamente encadeada). É ideal para lógicas que efetuem muitas adições e remoções.","x":-1480,"y":-700,"width":337,"height":230,"color":"2"},
		{"id":"dc6af354889f4ad5","type":"text","text":"**ARRAYLIST**\n\n Armazena os itens sequencialmente e é a escolha ideal quando se deseja acesso rápido aos elementos, uma vez que os valores armazenados são acessados através do índice. Não é thread-safe.","x":-1480,"y":-170,"width":337,"height":220,"color":"2"},
		{"id":"4634acc678539a05","type":"text","text":"**ADIÇÃO:** O(1) se for o primeiro elemento e O(n) se for arbitrário","x":-2000,"y":-620,"width":250,"height":115,"color":"2"},
		{"id":"8aa3b854f9c467ee","type":"text","text":"**REMOÇÃO:** O(1) se for o primeiro elemento e O(n) se for arbitrário","x":-2000,"y":-470,"width":250,"height":110,"color":"2"},
		{"id":"5dc914da923a9efe","type":"text","text":"**BUSCA:** O(n)","x":-2000,"y":-170,"width":250,"height":60,"color":"2"},
		{"id":"a3a69fa9d8676555","type":"text","text":"**ADIÇÃO:** O(1)","x":-2000,"y":-60,"width":250,"height":60,"color":"2"},
		{"id":"2e803c1dad17358d","type":"text","text":"**REMOÇÃO:** O(n)","x":-2000,"y":50,"width":250,"height":60,"color":"2"},
		{"id":"9f2a6d7a23628c2e","type":"text","text":"**BUSCA:** O(n)","x":-2000,"y":350,"width":250,"height":60,"color":"2"},
		{"id":"d435ef1dd04d99cd","type":"text","text":"**ADIÇÃO:** O(1)","x":-2000,"y":440,"width":250,"height":60,"color":"2"},
		{"id":"aa0e43304e6f329a","type":"text","text":"**REMOÇÃO:** O(1)","x":-2000,"y":530,"width":250,"height":60,"color":"2"},
		{"id":"b285b59ddcad573a","type":"text","text":"**BUSCA:** O(n)","x":-2000,"y":840,"width":250,"height":60,"color":"2"},
		{"id":"e572da461ca16f24","type":"text","text":"**ADIÇÃO:** O(1)","x":-2000,"y":930,"width":250,"height":60,"color":"2"},
		{"id":"431965dccc9a744a","type":"text","text":"**REMOÇÃO:** O(n)","x":-2000,"y":1020,"width":250,"height":60,"color":"2"},
		{"id":"cf240e02ca191fa7","type":"text","text":"**VECTOR**\n\n Armazena os itens sequencialmente e, cada que vez precisa ser redimensionado, ele dobrará de tamanho.","x":-1481,"y":810,"width":338,"height":180,"color":"2"},
		{"id":"06f1904ee069283a","type":"text","text":"**STACK**\n\n Armazena os itens sequencialmente mas o último a entrar é o primeiro a sair. É thread safe também, ideal para ambientes multi-thread.","x":-1481,"y":350,"width":337,"height":180,"color":"2"},
		{"id":"e3369e306a1de841","type":"text","text":"**ACESSO:** O(n)","x":-2000,"y":-810,"width":250,"height":70,"color":"2"},
		{"id":"0c0c1a0c70581cf6","type":"text","text":"**ARRAY DEQUEUE**\n\n- Aplicação de Deque baseada em um array redimensionável;\n- Utiliza a lógica de Array Circular;\n- Acesso a elementos apenas nas extremidades;\n- Não é thread-safe;\n- Possível usar como pilha ou fila;\n- Não permite adição de elementos null;\n- Mantém a ordem de adição.","x":1520,"y":1685,"width":480,"height":300,"color":"5"},
		{"id":"5206734e82138078","type":"text","text":"**CONCURRENTLINKEDDEQUE**\n\n- Funcional em ambientes multi-thread;\n- Baseada em **listas duplamente encadeadas e não bloqueantes** (ou seja, em vez de utilizar locks, utilizam técnicas atômicas de concorrência, nesse caso o CAS);\n- Sem acesso por índice;\n- Não permite null;\n- Mantém a ordem de adição.","x":2080,"y":1685,"width":463,"height":300,"color":"5"},
		{"id":"a7f0780786390ef5","type":"text","text":"**SET**\n\n- Não permite elementos duplicados;\n- Não garante ordenação.\n","x":600,"y":110,"width":297,"height":180,"color":"4"},
		{"id":"a793ef96df2d9fb1","type":"text","text":"**COLLECTIONS**","x":-68,"y":170,"width":185,"height":60,"color":"6"},
		{"id":"e9379b13474fa458","type":"text","text":"**ACESSO:** O(1) para ver quaisquer pontas.","x":278,"y":1685,"width":242,"height":90,"color":"5"},
		{"id":"23e93dd53d66964c","type":"text","text":"**BUSCA:** O(n) ","x":580,"y":1685,"width":160,"height":50,"color":"5"},
		{"id":"c4c35085313d2079","type":"text","text":"**ADIÇÃO:** O(1) para quaisquer pontas.","x":800,"y":1685,"width":242,"height":90,"color":"5"},
		{"id":"382acc394937358a","type":"text","text":"**REMOÇÃO:** O(1) para quaisquer pontas.","x":1100,"y":1685,"width":242,"height":90,"color":"5"},
		{"id":"dd06879cc0c4c1c5","type":"text","text":"**DEQUEUE**\n\n- É uma fila de duas pontas, ou seja, é possível inserir e remover itens tanto do começo quanto do fim;\n- Pode ser implementada principalmente de três formas:\n\t- **ArrayDeque:** Ideal para uso geral;\n\t- **ConcurrentLinkedDeque:** Ideal para ambientes multi-thread.","x":580,"y":1170,"width":462,"height":280,"color":"5"},
		{"id":"38702584fd651165","type":"text","text":"**QUEUE**\n\n- FIFO (First In, First Out - Primeiro a entrar, Primeiro a sair);\n- Útil para fluxo de dados ordenados;\n- Simula filas reais.","x":-124,"y":675,"width":297,"height":240,"color":"5"},
		{"id":"3a5f993a004a83f0","type":"text","text":"**BUSCA:** O(1)\n\n","x":1807,"y":-730,"width":160,"height":50,"color":"4"},
		{"id":"e822f8d8063abe85","type":"text","text":"**ADIÇÃO:** O(1)\n\n","x":1807,"y":-620,"width":160,"height":50,"color":"4"},
		{"id":"4e483e08d0acb1a6","type":"text","text":"**REMOÇÃO:** O(1)\n\n","x":1797,"y":-510,"width":180,"height":50,"color":"4"},
		{"id":"71b195ad85860422","type":"text","text":"**ACESSO:** O(n)\n\n","x":1807,"y":-840,"width":160,"height":50,"color":"4"},
		{"id":"cf472ec6d950ba50","type":"text","text":"**HASHSET**\n\n- Utiliza uma HashTable como base;\n- Não ordenado;\n- Tem busca, adição e remoção rápidos.\n","x":1327,"y":-730,"width":297,"height":220,"color":"4"},
		{"id":"ef4780480a6dd1a8","type":"text","text":"**ADIÇÃO:** O(log n)\n\n","x":1787,"y":455,"width":200,"height":50,"color":"4"},
		{"id":"6cc48cae9e9f23fb","type":"text","text":"**REMOÇÃO:** O(log n)\n\n","x":1777,"y":550,"width":220,"height":50,"color":"4"},
		{"id":"6e45899d177e2d29","type":"text","text":"**ACESSO:** O(n)\n\n","x":1727,"y":-265,"width":160,"height":50,"color":"4"},
		{"id":"d50dbb8bc31870d8","type":"text","text":"**BUSCA:** O(1)\n\n","x":1727,"y":-165,"width":160,"height":50,"color":"4"},
		{"id":"9ff81085e1cfecc1","type":"text","text":"**ADIÇÃO:** O(1)\n\n","x":1807,"y":-75,"width":160,"height":50,"color":"4"},
		{"id":"21b7cc6849265e30","type":"text","text":"**REMOÇÃO:** O(1)\n\n","x":1787,"y":15,"width":200,"height":50,"color":"4"},
		{"id":"130e03f2a4242447","type":"text","text":"**ACESSO:** O(n)\n\n","x":1807,"y":255,"width":160,"height":50,"color":"4"},
		{"id":"24b0f31bb52ec3df","type":"text","text":"**BUSCA:** O(log n)\n\n","x":1797,"y":355,"width":180,"height":50,"color":"4"},
		{"id":"07ba0e4c2a164a91","type":"text","text":"**LINKEDHASHSET**\n\n- Mantém a ordem dos elementos adicionados;\n- Baseado em listas duplamente encadeadas.","x":1327,"y":-205,"width":297,"height":180,"color":"4"},
		{"id":"5192b1b98b7abcaa","type":"text","text":"**SORTEDSET**\n\n- Mantém uma ordem pre-estipulada dos elementos;\n- Um Comparator customizado, fornecido na construção;\n- A complexidade, no geral, é O(log n);\n- Internamente é uma árvore rubro-negra;\n- É uma interface, logo não pode ser instanciada.","x":1327,"y":255,"width":297,"height":380,"color":"4"},
		{"id":"878c2d84188fb073","type":"text","text":"**PRIORITY QUEUE**\n\n- Sistema de fila que obedece uma regra de prioridade estipulada (ordem crescente, decrescente, etc.) definida por um Comparator;\n- O elemento com maior prioridade é sempre o primeiro a sair, não importando quando ele foi inserido.\n- Em Java, são implementadas utilizando um [heap binário mínimo](obsidian://open?vault=Obsidian&file=anotacoes_ti%2FPrograma%C3%A7%C3%A3o%2FT%C3%B3picos%20pendentes)","x":-993,"y":1135,"width":454,"height":350,"color":"5"},
		{"id":"761eb5e21fa83526","type":"text","text":"**ACESSO:** O(1), mas apenas o valor com maior prioridade é acessível\n\n","x":-1376,"y":1685,"width":300,"height":100,"color":"5"},
		{"id":"d7dfead2fcee1c34","type":"text","text":"**BUSCA:** O(n)\n\n","x":-1012,"y":1685,"width":161,"height":50,"color":"5"},
		{"id":"e2246c89f72434c7","type":"text","text":"**ADIÇÃO:** O(log n), apesar da adição ser feita com O(1), na pior das hipóteses, será necessário gerar uma [percolação](obsidian://open?vault=Obsidian&file=anotacoes_ti%2FPrograma%C3%A7%C3%A3o%2FT%C3%B3picos%20pendentes) para reorganização a queue de acordo com a prioridade estabelecida.\n\n","x":-793,"y":1685,"width":280,"height":240,"color":"5"},
		{"id":"62e01c140098380d","type":"text","text":"**REMOÇÃO:** O(log n) se for o elemento da raiz, O(n) pela necessidade de reorganização do heap executada a remoção.","x":-454,"y":1685,"width":300,"height":140,"color":"5"},
		{"id":"0568e578b03e3f95","type":"text","text":"**TREEMAP**\n\n- Organização crescente, por padrão, mas pode ser personalizada;\n- Funciona com a estrutura de uma árvore rubro-negra auto-balanceada;\n- Não aceita chaves que não podem ser comparadas entre si (com CompareTo);\n- Valores podem ser repetidos e podem ser null;\n- Pode ser ordenada utilizando o Comparable ou utilizando Comparator via construtor.","x":420,"y":-1000,"width":380,"height":370,"color":"3"},
		{"id":"084c08e27c4fdea1","type":"text","text":"**MAP**\n\n- Funcionam por chave e valor;\n- Chaves não podem ser duplicadas, mas valores podem;\n- Ao usar put() em uma chave já existente, o valor será substituído.","x":-162,"y":-1480,"width":373,"height":220,"color":"3"},
		{"id":"ae8e94007328f8e8","type":"text","text":"**ACESSO:** O(n)","x":123,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"dc3df14810c0eca2","type":"text","text":"**BUSCA:** O(log n)","x":372,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"e3e8aeafde2d448c","type":"text","text":"**ADIÇÃO:** O(log n)","x":624,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"c637ea318137452e","type":"text","text":"**REMOÇÃO:** O(log n)","x":864,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"5cb6486c5b2bff8b","type":"text","text":"**LINKEDHASHMAP**\n\n- Implementação da Interface Map, logo não pode ser instanciado;\n- Mantem a ordem de inserção dos elementos;\n- Combinação da performance do HashMap somado a previsibilidade pela manutenção da ordem dos elementos;\n- Cada entrada, além de chave e valor tem dois ponteiros: before (elemento anterior) e after (elemento posterior).","x":-169,"y":-2200,"width":380,"height":360,"color":"3"},
		{"id":"91881241d013497b","type":"text","text":"**ACESSO:** O(n)","x":-458,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"85198111e5494c24","type":"text","text":"**BUSCA:** O(1)","x":-209,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"4d6e2f60296d9726","type":"text","text":"**ADIÇÃO:** O(1)","x":43,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"688e1b684ef826d1","type":"text","text":"**REMOÇÃO:** O(1)","x":280,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"55151716697f8634","type":"text","text":"**ACESSO:** O(n)","x":-1546,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"1a1874b346600ff2","type":"text","text":"**BUSCA:** O(1)","x":-1297,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"93b253f1a433aae2","type":"text","text":"**ADIÇÃO:** O(1)","x":-1045,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"0f5a8a2f925e9185","type":"text","text":"**REMOÇÃO:** O(1)","x":-808,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"8dbbcc420d1143a5","type":"text","text":"**HASHTABLE**\n\n- Mapeia chaves únicas com seus respectivos valores;\n- Tem foco em sincronização (thread-safe);\n- Utiliza uma estrutura de tabelas Hash;\n- Tem performance reduzida em ambientes single-thread;\n- Não garante a ordenação das chaves;\n- Não aceita null como valor ou chave;\n- Não tem acesso por índice.","x":-1246,"y":-2200,"width":380,"height":360,"color":"3"},
		{"id":"4ba46092074027b3","type":"text","text":"**ACESSO:** O(n)","x":640,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"d944f90c9faa8ce2","type":"text","text":"**BUSCA:** O(1)","x":889,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"786428d7f52c4182","type":"text","text":"**ADIÇÃO:** O(1)","x":1141,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"fad525b7a5e4c4c0","type":"text","text":"**REMOÇÃO:** O(1)","x":1378,"y":-2480,"width":201,"height":63,"color":"3"},
		{"id":"917064f2f1047521","type":"text","text":"**HASHMAP**\n\n- Implementação da interface Map, logo não pode ser instanciada;\n- Armazena chave-valor mantendo a recuperação rápida dos valores através da chave, usando funções Hash;\n- Não mantém a ordenação;\n- Aceita uma chave como null e vários valores como null;\n- Não é thread-safe.","x":929,"y":-2180,"width":380,"height":320,"color":"3"},
		{"id":"45ba6d303d003da3","type":"text","text":"**ATENÇÃO!**\n\nNo caso da implementação do Hash não ser bem feita, a complexidade de qualquer operação será **O(n)**!","x":520,"y":-1458,"width":366,"height":176,"color":"1"},
		{"id":"b9139d66bb9b9b5d","type":"text","text":"**BUSCA:** O(log n)","x":-710,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"3c888e5f8b7180c1","type":"text","text":"**ADIÇÃO:** O(log n)","x":-458,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"f0ba22d846ba2495","type":"text","text":"**REMOÇÃO:** O(log n)","x":-218,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"0b7b5af8ac2307a7","type":"text","text":"**ACESSO:** O(n)","x":-959,"y":-480,"width":201,"height":63,"color":"3"},
		{"id":"2d51127fc9a7cf0e","type":"text","text":"**SORTEDMAP**\n\n- Uma interface, portanto, não pode ser instanciado;\n- Armazena as chaves em ordem crescente (por padrão), mas pode ser personalizado;\n- As chaves devem ser mutuamente comparáveis, utilizando o Comparable.","x":-677,"y":-1000,"width":380,"height":280,"color":"3"},
		{"id":"b14e2756775600c6","type":"text","text":"**ACESSO:** O(n)\n\n","x":1807,"y":830,"width":160,"height":50,"color":"4"},
		{"id":"644bb6bd3897bc71","type":"text","text":"**TREESET**\n\n- Armazena em ordem personalizada (default é ordem crescente);\n- É uma implementação concreta, logo pode ser instanciada direta;\n- Automaticamente se balanceia a cada modificação (adição e remoção).","x":1327,"y":855,"width":297,"height":320,"color":"4"},
		{"id":"c70598a218a33781","type":"text","text":"**BUSCA:** O(log n)\n\n","x":1797,"y":930,"width":180,"height":50,"color":"4"},
		{"id":"29a8e12396ba09ec","type":"text","text":"**ADIÇÃO:** O(log n)\n\n","x":1787,"y":1030,"width":200,"height":50,"color":"4"},
		{"id":"5fa04950cb53d891","type":"text","text":"**REMOÇÃO:** O(log n)\n\n","x":1777,"y":1125,"width":220,"height":50,"color":"4"}
	],
	"edges":[
		{"id":"85b02c933d150ebe","fromNode":"a793ef96df2d9fb1","fromSide":"bottom","toNode":"38702584fd651165","toSide":"top"},
		{"id":"42a2a9726abfca6d","fromNode":"a793ef96df2d9fb1","fromSide":"right","toNode":"a7f0780786390ef5","toSide":"left"},
		{"id":"e1dec57cec15be2e","fromNode":"a793ef96df2d9fb1","fromSide":"left","toNode":"e73565d31c8c25ed","toSide":"right"},
		{"id":"7f45e5e7a6e55707","fromNode":"e73565d31c8c25ed","fromSide":"left","toNode":"1430a32d7a1ca350","toSide":"right"},
		{"id":"9d4a8e8d6e3cd57b","fromNode":"1430a32d7a1ca350","fromSide":"left","toNode":"e3369e306a1de841","toSide":"right"},
		{"id":"87b941d4aa35f459","fromNode":"1430a32d7a1ca350","fromSide":"left","toNode":"d7893bf882447d7d","toSide":"right"},
		{"id":"e27ea8f1303deb9c","fromNode":"1430a32d7a1ca350","fromSide":"left","toNode":"4634acc678539a05","toSide":"right"},
		{"id":"66ac46016d6b1ece","fromNode":"1430a32d7a1ca350","fromSide":"left","toNode":"8aa3b854f9c467ee","toSide":"right"},
		{"id":"7b00985c3b8d04b5","fromNode":"e73565d31c8c25ed","fromSide":"left","toNode":"dc6af354889f4ad5","toSide":"right"},
		{"id":"25a1a32b97c377f9","fromNode":"dc6af354889f4ad5","fromSide":"left","toNode":"1061eb39cbab5973","toSide":"right"},
		{"id":"9d494eded2df752b","fromNode":"dc6af354889f4ad5","fromSide":"left","toNode":"5dc914da923a9efe","toSide":"right"},
		{"id":"50255ad002ce867d","fromNode":"dc6af354889f4ad5","fromSide":"left","toNode":"a3a69fa9d8676555","toSide":"right"},
		{"id":"79db2ba71182c1e4","fromNode":"dc6af354889f4ad5","fromSide":"left","toNode":"2e803c1dad17358d","toSide":"right"},
		{"id":"47244ae21041dbcd","fromNode":"e73565d31c8c25ed","fromSide":"left","toNode":"06f1904ee069283a","toSide":"right"},
		{"id":"9f5aa07fc7be182f","fromNode":"06f1904ee069283a","fromSide":"left","toNode":"d27b3dd9baa0b9a6","toSide":"right"},
		{"id":"9c34c8f8148b4759","fromNode":"06f1904ee069283a","fromSide":"left","toNode":"9f2a6d7a23628c2e","toSide":"right"},
		{"id":"33939c3844a5f0ff","fromNode":"06f1904ee069283a","fromSide":"left","toNode":"d435ef1dd04d99cd","toSide":"right"},
		{"id":"4fd8eae1a746bd1a","fromNode":"06f1904ee069283a","fromSide":"left","toNode":"aa0e43304e6f329a","toSide":"right"},
		{"id":"59a8e2e52e1efec8","fromNode":"e73565d31c8c25ed","fromSide":"left","toNode":"cf240e02ca191fa7","toSide":"right"},
		{"id":"434a1e93cf3c2586","fromNode":"cf240e02ca191fa7","fromSide":"left","toNode":"c0fd84367efb46aa","toSide":"right"},
		{"id":"c4e413abe9393d68","fromNode":"cf240e02ca191fa7","fromSide":"left","toNode":"b285b59ddcad573a","toSide":"right"},
		{"id":"a5298a7cb2e60517","fromNode":"cf240e02ca191fa7","fromSide":"left","toNode":"e572da461ca16f24","toSide":"right"},
		{"id":"9f267e3df95d672d","fromNode":"cf240e02ca191fa7","fromSide":"left","toNode":"431965dccc9a744a","toSide":"right"},
		{"id":"8bce76d7138ede7f","fromNode":"878c2d84188fb073","fromSide":"bottom","toNode":"761eb5e21fa83526","toSide":"top"},
		{"id":"60617cde76ed2fdc","fromNode":"878c2d84188fb073","fromSide":"bottom","toNode":"d7dfead2fcee1c34","toSide":"top"},
		{"id":"b3b8b4c55f1dbd2e","fromNode":"878c2d84188fb073","fromSide":"bottom","toNode":"e2246c89f72434c7","toSide":"top"},
		{"id":"250b97ffd6cf34e4","fromNode":"878c2d84188fb073","fromSide":"bottom","toNode":"62e01c140098380d","toSide":"top"},
		{"id":"dda007410ad64100","fromNode":"38702584fd651165","fromSide":"bottom","toNode":"878c2d84188fb073","toSide":"top"},
		{"id":"c0637c456942817f","fromNode":"38702584fd651165","fromSide":"bottom","toNode":"dd06879cc0c4c1c5","toSide":"top"},
		{"id":"285e2bf3ad990d7e","fromNode":"dd06879cc0c4c1c5","fromSide":"bottom","toNode":"e9379b13474fa458","toSide":"top"},
		{"id":"e62644acd7c925b4","fromNode":"dd06879cc0c4c1c5","fromSide":"bottom","toNode":"c4c35085313d2079","toSide":"top"},
		{"id":"9dd450c536b9e4ef","fromNode":"dd06879cc0c4c1c5","fromSide":"bottom","toNode":"382acc394937358a","toSide":"top"},
		{"id":"bbd74847d010c3f2","fromNode":"dd06879cc0c4c1c5","fromSide":"bottom","toNode":"23e93dd53d66964c","toSide":"top"},
		{"id":"019824aeda6aad5a","fromNode":"dd06879cc0c4c1c5","fromSide":"right","toNode":"0c0c1a0c70581cf6","toSide":"top"},
		{"id":"94058fa94a0674d5","fromNode":"dd06879cc0c4c1c5","fromSide":"right","toNode":"5206734e82138078","toSide":"top"},
		{"id":"ca64d3b1823d2a00","fromNode":"a7f0780786390ef5","fromSide":"right","toNode":"cf472ec6d950ba50","toSide":"left"},
		{"id":"ffcda524b530241f","fromNode":"cf472ec6d950ba50","fromSide":"right","toNode":"71b195ad85860422","toSide":"left"},
		{"id":"62ca5bee1f6a86dc","fromNode":"cf472ec6d950ba50","fromSide":"right","toNode":"3a5f993a004a83f0","toSide":"left"},
		{"id":"f7c04576d82fd3bc","fromNode":"cf472ec6d950ba50","fromSide":"right","toNode":"4e483e08d0acb1a6","toSide":"left"},
		{"id":"0f903be800cfc2fe","fromNode":"cf472ec6d950ba50","fromSide":"right","toNode":"e822f8d8063abe85","toSide":"left"},
		{"id":"906ba04f6b04177c","fromNode":"a7f0780786390ef5","fromSide":"right","toNode":"07ba0e4c2a164a91","toSide":"left"},
		{"id":"03f819a2dd5442e3","fromNode":"07ba0e4c2a164a91","fromSide":"right","toNode":"6e45899d177e2d29","toSide":"left"},
		{"id":"746f77cc1f6a050e","fromNode":"07ba0e4c2a164a91","fromSide":"right","toNode":"d50dbb8bc31870d8","toSide":"left"},
		{"id":"4ff1cbbcd236dfa2","fromNode":"07ba0e4c2a164a91","fromSide":"right","toNode":"9ff81085e1cfecc1","toSide":"left"},
		{"id":"307c1ab68b1633e9","fromNode":"07ba0e4c2a164a91","fromSide":"right","toNode":"21b7cc6849265e30","toSide":"left"},
		{"id":"03990c68b4452fa3","fromNode":"5192b1b98b7abcaa","fromSide":"right","toNode":"130e03f2a4242447","toSide":"left"},
		{"id":"e912ce3fa7495292","fromNode":"5192b1b98b7abcaa","fromSide":"right","toNode":"24b0f31bb52ec3df","toSide":"left"},
		{"id":"9c65c856a45e705f","fromNode":"5192b1b98b7abcaa","fromSide":"right","toNode":"ef4780480a6dd1a8","toSide":"left"},
		{"id":"16f39a7b3f354362","fromNode":"5192b1b98b7abcaa","fromSide":"right","toNode":"6cc48cae9e9f23fb","toSide":"left"},
		{"id":"512e129c11cd308c","fromNode":"a7f0780786390ef5","fromSide":"right","toNode":"5192b1b98b7abcaa","toSide":"left"},
		{"id":"1b64409a68d265b7","fromNode":"a7f0780786390ef5","fromSide":"right","toNode":"644bb6bd3897bc71","toSide":"left"},
		{"id":"96759958a8eff5d8","fromNode":"644bb6bd3897bc71","fromSide":"right","toNode":"b14e2756775600c6","toSide":"left"},
		{"id":"a0a72fa3fc468735","fromNode":"644bb6bd3897bc71","fromSide":"right","toNode":"c70598a218a33781","toSide":"left"},
		{"id":"dad70a69b4df21ef","fromNode":"644bb6bd3897bc71","fromSide":"right","toNode":"29a8e12396ba09ec","toSide":"left"},
		{"id":"d33fad82b0b1829e","fromNode":"644bb6bd3897bc71","fromSide":"right","toNode":"5fa04950cb53d891","toSide":"left"},
		{"id":"7929a5fd45a4c5d8","fromNode":"084c08e27c4fdea1","fromSide":"bottom","toNode":"2d51127fc9a7cf0e","toSide":"top"},
		{"id":"6740f9add1a75e06","fromNode":"084c08e27c4fdea1","fromSide":"bottom","toNode":"0568e578b03e3f95","toSide":"top"},
		{"id":"53c4aac6c76090ad","fromNode":"2d51127fc9a7cf0e","fromSide":"bottom","toNode":"0b7b5af8ac2307a7","toSide":"top"},
		{"id":"4eb98413f613b6f2","fromNode":"2d51127fc9a7cf0e","fromSide":"bottom","toNode":"b9139d66bb9b9b5d","toSide":"top"},
		{"id":"fddad480eb720e4a","fromNode":"2d51127fc9a7cf0e","fromSide":"bottom","toNode":"3c888e5f8b7180c1","toSide":"top"},
		{"id":"02448725e54847d8","fromNode":"2d51127fc9a7cf0e","fromSide":"bottom","toNode":"f0ba22d846ba2495","toSide":"top"},
		{"id":"9a662737aec975c4","fromNode":"0568e578b03e3f95","fromSide":"bottom","toNode":"ae8e94007328f8e8","toSide":"top"},
		{"id":"16a864d2a113c727","fromNode":"0568e578b03e3f95","fromSide":"bottom","toNode":"dc3df14810c0eca2","toSide":"top"},
		{"id":"bbbc522dd054f3c1","fromNode":"0568e578b03e3f95","fromSide":"bottom","toNode":"e3e8aeafde2d448c","toSide":"top"},
		{"id":"1b480ee157641d90","fromNode":"0568e578b03e3f95","fromSide":"bottom","toNode":"c637ea318137452e","toSide":"top"},
		{"id":"c9f7b9454a1cdcd8","fromNode":"084c08e27c4fdea1","fromSide":"top","toNode":"8dbbcc420d1143a5","toSide":"bottom"},
		{"id":"909bbb38925525fa","fromNode":"084c08e27c4fdea1","fromSide":"top","toNode":"5cb6486c5b2bff8b","toSide":"bottom"},
		{"id":"3b830b76acf4dd81","fromNode":"084c08e27c4fdea1","fromSide":"top","toNode":"917064f2f1047521","toSide":"bottom"},
		{"id":"2135500bebf35e61","fromNode":"5cb6486c5b2bff8b","fromSide":"top","toNode":"91881241d013497b","toSide":"bottom"},
		{"id":"d226fa7e341b2590","fromNode":"5cb6486c5b2bff8b","fromSide":"top","toNode":"85198111e5494c24","toSide":"bottom"},
		{"id":"3a4fe99b94483a25","fromNode":"5cb6486c5b2bff8b","fromSide":"top","toNode":"4d6e2f60296d9726","toSide":"bottom"},
		{"id":"3d9a31a64e4740ab","fromNode":"5cb6486c5b2bff8b","fromSide":"top","toNode":"688e1b684ef826d1","toSide":"bottom"},
		{"id":"ecd9b4d67acdd491","fromNode":"8dbbcc420d1143a5","fromSide":"top","toNode":"55151716697f8634","toSide":"bottom"},
		{"id":"1190eafbe6e59590","fromNode":"8dbbcc420d1143a5","fromSide":"top","toNode":"1a1874b346600ff2","toSide":"bottom"},
		{"id":"be5d0ca8af86be83","fromNode":"8dbbcc420d1143a5","fromSide":"top","toNode":"93b253f1a433aae2","toSide":"bottom"},
		{"id":"d50f6b74cf383c06","fromNode":"8dbbcc420d1143a5","fromSide":"top","toNode":"0f5a8a2f925e9185","toSide":"bottom"},
		{"id":"67f25b93e4e9427f","fromNode":"917064f2f1047521","fromSide":"top","toNode":"4ba46092074027b3","toSide":"bottom"},
		{"id":"1f568a43da101791","fromNode":"917064f2f1047521","fromSide":"top","toNode":"d944f90c9faa8ce2","toSide":"bottom"},
		{"id":"33dae0844e286990","fromNode":"917064f2f1047521","fromSide":"top","toNode":"786428d7f52c4182","toSide":"bottom"},
		{"id":"018c0d190f4b0d6f","fromNode":"917064f2f1047521","fromSide":"top","toNode":"fad525b7a5e4c4c0","toSide":"bottom"},
		{"id":"aaf818d54abbb505","fromNode":"084c08e27c4fdea1","fromSide":"right","toNode":"45ba6d303d003da3","toSide":"left"}
	]
}